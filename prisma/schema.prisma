// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique @db.VarChar(255)
  telephone String?  @db.VarChar(20)
  firstName String?  @db.VarChar(100)
  lastName  String?  @db.VarChar(100)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  password  String   @db.VarChar(255)

  memberships OrganizationMembership[]
  type        UserType                 @default(USER)
  stacks      Stack[]                  @relation("UserStacks")

  @@index([id])
  @@index([email])
}

model Organization {
  id        String    @id @default(uuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  memberships OrganizationMembership[]

  @@index([id])
  @@index([name])
}

model OrganizationMembership {
  id             String                 @id @default(uuid())
  organizationId String
  userId         String
  role           OrganizationMemberRole @default(MEMBER)
  createdAt      DateTime               @default(now())
  updatedAt      DateTime?              @updatedAt

  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  organization Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@unique([organizationId, userId])
  @@index([userId])
  @@index([organizationId])
}

model Stack {
  id          String   @id @default(uuid())
  name        String   @db.VarChar(255)
  description String?  @db.Text
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User @relation("UserStacks", fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

enum OrganizationMemberRole {
  MANAGER
  MEMBER
}

enum UserType {
  USER
  ADMIN
}
